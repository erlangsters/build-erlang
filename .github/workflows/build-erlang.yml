name: Build Erlang

on:
  workflow_dispatch:
    inputs:
      erlang-version:
        description: 'Erlang version to build'
        required: true
      upload-source:
        description: 'Upload source to S3 storage'
        required: true
        type: boolean
        default: true
      upload-builds:
        description: 'Upload builds to S3 storage'
        required: true
        type: boolean
        default: true
      s3-storage-endpoint:
        description: 'URL endpoint of the S3 storage.'
        required: true
        default: 'https://storage.byteplug.io'
      s3-bucket-name:
        description: 'Name of the S3 bucket'
        required: true
        default: 'erlangsters'
      s3-path-prefix:
        description: 'Path prefix within the S3 bucket'
        default: '.'

jobs:
  download-erlang:
    runs-on: ubuntu-latest
    steps:
      - name: Restore downloaded Erlang source tarball
        id: cache-erlang
        uses: actions/cache@v4
        with:
          path: erlang-${{ github.event.inputs['erlang-version'] }}-source.tar.gz
          key: erlang-${{ github.event.inputs['erlang-version'] }}

      - name: Download Erlang source tarball
        if: steps.cache-erlang.outputs.cache-hit != 'true'
        run: |
          wget https://erlang.org/download/otp_src_${{ github.event.inputs['erlang-version'] }}.tar.gz
          mv otp_src_${{ github.event.inputs['erlang-version'] }}.tar.gz erlang-${{ github.event.inputs['erlang-version'] }}-source.tar.gz

      - name: Cache downloaded Erlang source tarball
        if: steps.cache-erlang.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: erlang-${{ github.event.inputs['erlang-version'] }}-source.tar.gz
          key: erlang-${{ github.event.inputs['erlang-version'] }}
